package record;

import java.util.List;

public class Main {
    public static void main(String[] args) {

        Employee e1 = new Employee(1, "Alice", 5000, List.of("HR", "Finance"));
        Employee e2 = new Employee(2, "Bob", 7000, List.of("Engineering", "Operations"));

        System.out.println(e1);
        System.out.println(e2);

        System.out.println("empCounter: " + Employee.empCounter);
        System.out.println("totalSalary" + Employee.getTotalSalary());

    }
}


// javap -p Employee.class
// javap -c -p Employee.class
// javap -p Employee
// Record's component -> instance field declared in the record header

/*
Record
- special type of class designed to model immutable data.
- simplifies the creation of data-carrying classes by automatically generating boilerplate code
- constructor, getter methods, toString(), equals(), and hashCode() are generated by the Java compiler during compile time
 */

/*
Resources
https://www.baeldung.com/java-record-keyword
https://www.geeksforgeeks.org/what-are-java-records-and-how-to-use-them-alongside-constructors-and-methods/
https://docs.oracle.com/en/java/javase/23/language/records.html
https://docs.oracle.com/en/java/javase/17/language/records.html
 */